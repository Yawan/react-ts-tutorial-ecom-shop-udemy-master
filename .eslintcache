[{"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\App.tsx":"1","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\reportWebVitals.ts":"2","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\index.tsx":"3","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\containers\\HomePage\\index.tsx":"4","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\containers\\CheckoutPage\\index.tsx":"5","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\components\\ShopQuality\\index.tsx":"6","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\components\\ProductCard\\index.tsx":"7","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\components\\HeaderNavigation\\index.tsx":"8","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\containers\\AllProductsPage\\index.tsx":"9","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\components\\Partners\\index.tsx":"10","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\containers\\BestSeller\\index.tsx":"11","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\store\\rootSaga.ts":"12","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\store\\sagas\\shopSaga.ts":"13","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\ui-components\\Checkbox\\index.tsx":"14","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\components\\AllProductsSideBar\\index.tsx":"15","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\store\\actions\\userAction.ts":"16","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\utils\\helper.ts":"17","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\store\\sagas\\userSaga.ts":"18","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\store\\reducers\\userReducer.ts":"19","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\store\\actions\\shopAction.ts":"20","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\store\\reducers\\shopReducer.ts":"21","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\ui-components\\Button\\index.tsx":"22","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\components\\Pagination\\index.tsx":"23","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\components\\ProductCardModal\\index.tsx":"24","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\ui-components\\Modal\\index.tsx":"25","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\utils\\product.ts":"26","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\api\\shopAPI.ts":"27","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\components\\ProductCardModalVariantOptions\\index.tsx":"28","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\components\\ProductCardModalPriceUI\\index.tsx":"29"},{"size":1580,"mtime":1610891236109,"results":"30","hashOfConfig":"31"},{"size":425,"mtime":1608809934688,"results":"32","hashOfConfig":"31"},{"size":500,"mtime":1608809934688,"results":"33","hashOfConfig":"31"},{"size":546,"mtime":1610865866850,"results":"34","hashOfConfig":"31"},{"size":242,"mtime":1610865866850,"results":"35","hashOfConfig":"31"},{"size":1040,"mtime":1610719397107,"results":"36","hashOfConfig":"31"},{"size":1279,"mtime":1611223164735,"results":"37","hashOfConfig":"31"},{"size":654,"mtime":1610865866840,"results":"38","hashOfConfig":"31"},{"size":3428,"mtime":1611222973875,"results":"39","hashOfConfig":"31"},{"size":457,"mtime":1610719397103,"results":"40","hashOfConfig":"31"},{"size":1840,"mtime":1611222957856,"results":"41","hashOfConfig":"31"},{"size":221,"mtime":1610865866854,"results":"42","hashOfConfig":"31"},{"size":2626,"mtime":1611113073454,"results":"43","hashOfConfig":"31"},{"size":1001,"mtime":1611022735224,"results":"44","hashOfConfig":"31"},{"size":2019,"mtime":1611025579300,"results":"45","hashOfConfig":"31"},{"size":1061,"mtime":1611112573128,"results":"46","hashOfConfig":"31"},{"size":771,"mtime":1611389680410,"results":"47","hashOfConfig":"31"},{"size":2396,"mtime":1611114757549,"results":"48","hashOfConfig":"31"},{"size":952,"mtime":1611112609784,"results":"49","hashOfConfig":"31"},{"size":2954,"mtime":1610891200936,"results":"50","hashOfConfig":"31"},{"size":1999,"mtime":1611389285520,"results":"51","hashOfConfig":"31"},{"size":503,"mtime":1611390869723,"results":"52","hashOfConfig":"31"},{"size":2628,"mtime":1611134925099,"results":"53","hashOfConfig":"31"},{"size":2077,"mtime":1611410952224,"results":"54","hashOfConfig":"31"},{"size":1412,"mtime":1611223210211,"results":"55","hashOfConfig":"31"},{"size":1553,"mtime":1611390767356,"results":"56","hashOfConfig":"31"},{"size":878,"mtime":1610891200936,"results":"57","hashOfConfig":"31"},{"size":2259,"mtime":1611410638803,"results":"58","hashOfConfig":"31"},{"size":677,"mtime":1611411051480,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"r57k89",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\App.tsx",["124","125"],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\reportWebVitals.ts",[],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\index.tsx",[],["126","127"],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\containers\\HomePage\\index.tsx",[],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\containers\\CheckoutPage\\index.tsx",[],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\components\\ShopQuality\\index.tsx",[],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\components\\ProductCard\\index.tsx",[],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\components\\HeaderNavigation\\index.tsx",[],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\containers\\AllProductsPage\\index.tsx",["128"],"import React from 'react';\r\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux';\r\nimport { AllProductsSideBar } from '../../components/AllProductsSideBar';\r\nimport Pagination from '../../components/Pagination';\r\nimport { ProductCard } from '../../components/ProductCard';\r\nimport ShopAction from '../../store/actions/shopAction';\r\nimport UserAction from '../../store/actions/userAction';\r\nimport { StoreStateType } from '../../store/rootReducer';\r\nimport { Modal } from '../../ui-components/Modal';\r\nimport { AllProductsDispatchToProps, AllProductsOwnProps, AllProductsPageProps, AllProductsStateProps } from './interface';\r\nimport './style.css';\r\n\r\nclass AllProductsPage extends React.Component<AllProductsPageProps> {\r\n    componentDidMount() {\r\n        const { shopProducts } = this.props;\r\n\r\n        if(!shopProducts.products.length) {\r\n            this.props.fetchShopProductsAndFilters();\r\n        }\r\n    }\r\n\r\n    renderAllProducts = () => {\r\n        const { shopProducts } = this.props;\r\n        return shopProducts.products.map((product) => {\r\n            return (\r\n                <div key={product.id} className=\"product-item-container\">\r\n                    <ProductCard product={product}  />\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n\r\n    handlePageChange = (selectedPage: number) => {\r\n        const { userSelectedPage, updateUserShopProductsPage } = this.props;\r\n\r\n        if(userSelectedPage !== selectedPage) updateUserShopProductsPage(selectedPage);\r\n    }\r\n\r\n    render() {\r\n        const { productFilters, userFilters, updateUserFilters, shopProducts, userSelectedPage } = this.props;\r\n        return (\r\n            <div className=\"all-products-page-container\">\r\n                <AllProductsSideBar onUpdateUserFilters={updateUserFilters} userFilters={userFilters} productFilters={productFilters} />\r\n                <div className=\"all-products-container\">\r\n                    <div className=\"all-products\">\r\n                        {this.renderAllProducts()}\r\n                    </div>\r\n                    <Pagination overrideSelectedPage={userSelectedPage} onChange={this.handlePageChange} numberOfPages={shopProducts.totalPages} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps: MapStateToProps<AllProductsStateProps, AllProductsOwnProps, StoreStateType> = (state) => {\r\n    const { shopProducts, productFilters } = state.shop;\r\n    const { filters, shopProductsPage } = state.user;\r\n    return {\r\n        shopProducts: shopProducts,\r\n        productFilters: productFilters,\r\n        userFilters: filters,\r\n        userSelectedPage: shopProductsPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps: MapDispatchToPropsFunction<AllProductsDispatchToProps, AllProductsOwnProps> = (dispatch) => {\r\n    const { fetchShopProducts, fetchShopProductsAndFilters } = new ShopAction();\r\n    const { updateUserFilters, updateUserShopProductsPage } = new UserAction();\r\n    return {\r\n        fetchShopProducts:(options) => dispatch(fetchShopProducts(options)),\r\n        fetchShopProductsAndFilters: () => dispatch(fetchShopProductsAndFilters()),\r\n        updateUserFilters: (filters) => dispatch(updateUserFilters(filters)),\r\n        updateUserShopProductsPage: (shopProductsPage) => dispatch(updateUserShopProductsPage(shopProductsPage))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllProductsPage);","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\components\\Partners\\index.tsx",[],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\containers\\BestSeller\\index.tsx",[],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\store\\rootSaga.ts",[],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\store\\sagas\\shopSaga.ts",["129","130"],"import { call, put, select, takeLatest } from 'redux-saga/effects'\r\nimport ShopAPI, { GetProducsOptions, ProductFiltersAPIResponse } from '../../api/shopAPI';\r\nimport { convertFiltersToCategories } from '../../utils/helper';\r\nimport ShopAction, { FetchShopProductsAction } from '../actions/shopAction'\r\nimport { Shop, ShopProducts } from '../reducers/shopReducer';\r\nimport { User } from '../reducers/userReducer';\r\nimport { StoreStateType } from '../rootReducer';\r\n\r\nfunction* workerFetchShopProductsSaga(action: FetchShopProductsAction) {\r\n    const shopAPI = new ShopAPI();\r\n    const shopAction = new ShopAction();\r\n\r\n    try {\r\n        const response = yield call(shopAPI.getProducts, action.options);\r\n        const shopProducts = response.data as ShopProducts;\r\n\r\n        yield put(shopAction.setShopProducts(shopProducts));\r\n    } catch (err) {\r\n        // TODO: Change in the future\r\n        console.log('err');\r\n    }\r\n}\r\n\r\nfunction* workerFetchBestSellerProductsSaga() {\r\n    const shopAPI = new ShopAPI();\r\n    const shopAction = new ShopAction();\r\n\r\n    try {\r\n        const response = yield call(shopAPI.getProducts, { category: ['best seller'] } );\r\n        const { products } = response.data as ShopProducts;\r\n\r\n        yield put(shopAction.setBestSellerProducts(products));\r\n    } catch (err) {\r\n        // TODO: Change in the future\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction* workerFetchShopProductsAndFilterSaga(action: FetchShopProductsAction) {\r\n    const shopAPI = new ShopAPI();\r\n    const shopAction = new ShopAction();\r\n\r\n    try {\r\n        const user: User = yield select((state: StoreStateType) => state.user);\r\n\r\n        const options: GetProducsOptions = {\r\n            page: user.shopProductsPage,\r\n            size: user.shopProductsSize,\r\n        };\r\n\r\n        const productsResponse = yield call(shopAPI.getProducts, options);\r\n        const productFiltersResponse = yield call(shopAPI.getProductFilters);\r\n\r\n        const shopProducts = productsResponse.data as ShopProducts;\r\n        const { productFilters } = productFiltersResponse.data as ProductFiltersAPIResponse;\r\n\r\n        yield put(shopAction.setShopProductsAndFilters(shopProducts, productFilters));\r\n    } catch (err) {\r\n        // TODO: Change in the future\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport function* watchShopSaga() {\r\n    yield takeLatest(ShopAction.FETCH_SHOP_PRODUCTS, workerFetchShopProductsSaga);\r\n    yield takeLatest(ShopAction.FETCH_ALL_BEST_SELLER_PRODUCTS, workerFetchBestSellerProductsSaga);\r\n    yield takeLatest(ShopAction.FETCH_SHOP_PRODUCTS_AND_FILTERS, workerFetchShopProductsAndFilterSaga)\r\n}","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\ui-components\\Checkbox\\index.tsx",[],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\components\\AllProductsSideBar\\index.tsx",[],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\store\\actions\\userAction.ts",[],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\utils\\helper.ts",[],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\store\\sagas\\userSaga.ts",[],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\store\\reducers\\userReducer.ts",[],["131","132"],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\store\\actions\\shopAction.ts",["133"],"import { GetProducsOptions } from \"../../api/shopAPI\";\r\nimport { Product, Shop, ProductFilters, ShopProducts } from \"../reducers/shopReducer\";\r\n\r\nexport type ShopReducerAction = SetShopProductsAction | FetchShopProductsAction | SetBestSellerProductsAction | FetchBestSellerProductsAction\r\n    | FetchShopProductsAndFilterAction | SetShopProductsAndFilterAction;\r\n\r\nexport interface SetShopProductsAction {\r\n    type: typeof ShopAction.SET_SHOP_PRODUCTS;\r\n    shopProducts: ShopProducts;\r\n}\r\n\r\nexport interface FetchShopProductsAction {\r\n    type: typeof ShopAction.FETCH_SHOP_PRODUCTS;\r\n    options: GetProducsOptions;\r\n}\r\n\r\nexport interface SetBestSellerProductsAction {\r\n    type: typeof ShopAction.SET_BEST_SELLER_PRODUCTS;\r\n    bestSellerProducts: Product[];\r\n}\r\n\r\nexport interface FetchBestSellerProductsAction {\r\n    type: typeof ShopAction.FETCH_ALL_BEST_SELLER_PRODUCTS;\r\n}\r\n\r\nexport interface FetchShopProductsAndFilterAction {\r\n    type: typeof ShopAction.FETCH_SHOP_PRODUCTS_AND_FILTERS;\r\n}\r\n\r\nexport interface SetShopProductsAndFilterAction {\r\n    type: typeof ShopAction.SET_SHOP_PRODUCTS_AND_FILTERS;\r\n    shopProducts: ShopProducts;\r\n    productFilters: ProductFilters;\r\n}\r\n\r\nclass ShopAction {\r\n    static readonly FETCH_SHOP_PRODUCTS_AND_FILTERS = 'FETCH_SHOP_PRODUCTS_AND_FILTERS';\r\n    static readonly SET_SHOP_PRODUCTS_AND_FILTERS = 'SET_SHOP_PRODUCTS_AND_FILTERS';\r\n    static readonly FETCH_SHOP_PRODUCTS = 'FETCH_SHOP_PRODUCTS';\r\n    static readonly SET_SHOP_PRODUCTS = 'SET_SHOP_PRODUCTS';\r\n    static readonly FETCH_ALL_BEST_SELLER_PRODUCTS = 'FETCH_ALL_BEST_SELLER_PRODUCTS';\r\n    static readonly SET_BEST_SELLER_PRODUCTS = 'SET_BEST_SELLER_PRODUCTS';\r\n\r\n    fetchShopProducts = (options: GetProducsOptions): FetchShopProductsAction => {\r\n        return {\r\n            type: ShopAction.FETCH_SHOP_PRODUCTS,\r\n            options,\r\n        }\r\n    }\r\n\r\n    setShopProducts = (shopProducts: ShopProducts): SetShopProductsAction => {\r\n        return {\r\n            type: ShopAction.SET_SHOP_PRODUCTS,\r\n            shopProducts\r\n        }\r\n    }\r\n\r\n    fetchAllBestSellerProducts = (): FetchBestSellerProductsAction => {\r\n        return {\r\n            type: ShopAction.FETCH_ALL_BEST_SELLER_PRODUCTS\r\n        }\r\n    }\r\n\r\n    setBestSellerProducts = (bestSellerProducts: Product[]): SetBestSellerProductsAction => {\r\n        return {\r\n            type: ShopAction.SET_BEST_SELLER_PRODUCTS,\r\n            bestSellerProducts\r\n        }\r\n    }\r\n\r\n    fetchShopProductsAndFilters = (): FetchShopProductsAndFilterAction => {\r\n        return {\r\n            type: ShopAction.FETCH_SHOP_PRODUCTS_AND_FILTERS,\r\n        }\r\n    }\r\n\r\n    setShopProductsAndFilters = (shopProducts: ShopProducts, productFilters: ProductFilters): SetShopProductsAndFilterAction => {\r\n        return {\r\n            type: ShopAction.SET_SHOP_PRODUCTS_AND_FILTERS,\r\n            shopProducts,\r\n            productFilters,\r\n        }\r\n    }\r\n}\r\n\r\nexport default ShopAction","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\store\\reducers\\shopReducer.ts",["134"],"import { AnyAction, Reducer } from \"redux\";\r\nimport ShopAction, { ShopReducerAction } from \"../actions/shopAction\";\r\nimport update from 'immutability-helper';\r\n\r\nexport type ProductVariantCompleteDetails = Omit<ProductVariant, 'id'> & Omit<Product, 'id' | 'variants'> & {\r\n    productId: string;\r\n    variantId: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n    id: string;\r\n    size: string;\r\n    color: string;\r\n    price: string;\r\n    stock: number;\r\n    discount?: string;\r\n    image: string;\r\n}\r\n\r\nexport interface Product {\r\n    id: string;\r\n    category: string[];\r\n    title: string;\r\n    variants: ProductVariant[];\r\n}\r\n\r\nexport interface ShopProducts {\r\n    products: Product[];\r\n    page?: number;\r\n    nextPage?: boolean;\r\n    productsCount: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport interface ProductFilters {\r\n    gender: string[];\r\n    category: string[];\r\n    trends: string[];\r\n}\r\n\r\nexport interface Shop {\r\n    shopProducts: ShopProducts;\r\n    bestSellerProducts: Product[];\r\n    productFilters: ProductFilters;\r\n}\r\n\r\nconst shopInitialState: Shop = {\r\n    shopProducts: {\r\n        products: [],\r\n        productsCount: 0,\r\n        totalPages: 1\r\n    },\r\n    productFilters: {\r\n        gender: [],\r\n        category: [],\r\n        trends: [],\r\n    },\r\n    bestSellerProducts: []\r\n}\r\n\r\nexport const shopReducer: Reducer<Shop, ShopReducerAction> = (state = shopInitialState, action) => {\r\n    switch(action.type) {\r\n        case ShopAction.SET_SHOP_PRODUCTS_AND_FILTERS:\r\n            return update(state, { \r\n                shopProducts: { $set: action.shopProducts },\r\n                productFilters: { $set: action.productFilters }\r\n            })\r\n        case ShopAction.SET_BEST_SELLER_PRODUCTS:\r\n            return update(state, { bestSellerProducts: { $set: action.bestSellerProducts } })\r\n        case ShopAction.SET_SHOP_PRODUCTS:\r\n            return update(state, { shopProducts: { $set: action.shopProducts } })\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\ui-components\\Button\\index.tsx",[],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\components\\Pagination\\index.tsx",[],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\components\\ProductCardModal\\index.tsx",[],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\ui-components\\Modal\\index.tsx",[],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\utils\\product.ts",[],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\api\\shopAPI.ts",[],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\components\\ProductCardModalVariantOptions\\index.tsx",[],"C:\\Users\\Rysh\\Documents\\Tutorial\\shopspree\\src\\components\\ProductCardModalPriceUI\\index.tsx",[],{"ruleId":"135","severity":1,"message":"136","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":12},{"ruleId":"135","severity":1,"message":"139","line":14,"column":8,"nodeType":"137","messageId":"138","endLine":14,"endColumn":18},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"135","severity":1,"message":"144","line":9,"column":10,"nodeType":"137","messageId":"138","endLine":9,"endColumn":15},{"ruleId":"135","severity":1,"message":"145","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":36},{"ruleId":"135","severity":1,"message":"146","line":5,"column":10,"nodeType":"137","messageId":"138","endLine":5,"endColumn":14},{"ruleId":"140","replacedBy":"147"},{"ruleId":"142","replacedBy":"148"},{"ruleId":"135","severity":1,"message":"146","line":2,"column":19,"nodeType":"137","messageId":"138","endLine":2,"endColumn":23},{"ruleId":"135","severity":1,"message":"149","line":1,"column":10,"nodeType":"137","messageId":"138","endLine":1,"endColumn":19},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ShopAction' is defined but never used.","no-native-reassign",["150"],"no-negated-in-lhs",["151"],"'Modal' is defined but never used.","'convertFiltersToCategories' is defined but never used.","'Shop' is defined but never used.",["150"],["151"],"'AnyAction' is defined but never used.","no-global-assign","no-unsafe-negation"]